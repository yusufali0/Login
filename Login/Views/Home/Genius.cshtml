@{
    ViewBag.Title = "Genius";
}

<!DOCTYPE html>
<html>
<head>
    <title>Send Message</title>
</head>
<body>

    <h1>Chat Box</h1>

    <div id="chatBox" style="border: 1px solid #ccc; height: 300px; overflow-y: scroll; padding: 10px; ">
    </div>

    <form id="sendMessageForm">
        <label for="message">Message:</label><br>
        <input type="text" id="message" name="message"><br><br>
        <button type="button" onclick="sendMessage()">Send</button>
    </form>

    <script>
        async function sendMessage() {
            const message = document.getElementById("message").value;
            const apiUrl = "/Home/SendMessage";

            appendMessage(`You: ${message}`, 'sent');

            const formData = new URLSearchParams();
            formData.append("message", message);

            try {
                const response = await fetch(apiUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
                    },
                    body: formData
                });

                const responseData = await response.json();

                if (response.ok) { 
                    // API'den gelen 'message' kısmını 
                    const botMessage = responseData.answer.message;
                    // Sadece 'message' kısmını 
                    appendMessage(`AI: ${botMessage}`, 'response');
                } else {
                    // Hata mesajını chat kutusuna ekle
                    appendMessage(`Bot Error: Bir hata oluştu, lütfen tekrar deneyin.`, 'error');
                }
            } catch (error) {
                // Hata mesajını chat kutusuna ekle
                appendMessage(`Error: Bir hata oluştu, lütfen tekrar deneyin.`, 'error');
            }
        }

        function appendMessage(message, type) {
            const chatBox = document.getElementById("chatBox");
            const messageElement = document.createElement("div");

            messageElement.textContent = message;

            switch (type) {
                case 'sent':
                    messageElement.style.color = 'blue';
                    break;
                case 'response':
                    messageElement.style.color = 'green';
                    break;
                case 'error':
                    messageElement.style.color = 'red';
                    break;
            }

            chatBox.appendChild(messageElement);
            chatBox.scrollTop = chatBox.scrollHeight;
        }


    </script>

</body>
</html>

























@* @{
    ViewBag.Title = "Genius";
}

<!DOCTYPE html>
<html>
<head>
    <title>Send Message</title>
</head>
<body>

    <h1>Chat Box</h1>

    <div id="chatBox" style="border: 1px solid #ccc; height: 300px; overflow-y: scroll; padding: 10px;">
        <!-- Chat messages will be displayed here -->
    </div>

    <form id="sendMessageForm">
        <label for="message">Message:</label><br>
        <input type="text" id="message" name="message"><br><br>
        <button type="button" onclick="sendMessage()">Send</button>
    </form>

    <script>
        async function sendMessage() {
            const message = document.getElementById("message").value;
            const apiUrl = "/Home/SendMessage"; // HomeController adınıza göre değiştirin

            const formData = new URLSearchParams();
            formData.append("message", message);

            try {
                const response = await fetch(apiUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"
                    },
                    body: formData
                });

                if (response.ok) {
                    const data = await response.text();
                    appendMessage(data, 'response');
                } else {
                    appendMessage(`Error: ${response.statusText}`, 'error');
                }
            } catch (error) {
                appendMessage(`Error: ${error.message}`, 'error');
            }
        }

        function appendMessage(message, type) {
            const chatBox = document.getElementById("chatBox");
            const messageElement = document.createElement("div");

            messageElement.textContent = message;

            if (type === 'response') {
                messageElement.style.color = 'green';
            } else if (type === 'error') {
                messageElement.style.color = 'red';
            }

            chatBox.appendChild(messageElement);

            // Scroll chat box to bottom
            chatBox.scrollTop = chatBox.scrollHeight;
        }
    </script>

</body>
</html>
 *@





@* 
<div>
    <h2>API'den Alınan Veri:</h2>
    <textarea id="api-data" rows="10" cols="50"></textarea>
    <br />
    <input type="text" id="message" placeholder="Mesajınızı girin">
    <button id="send-button">API İsteği Gönder</button>
</div>

<script>
   
    // Butona tıklama olayını dinle
    document.getElementById("send-button").addEventListener("click", function () {
        // Kullanıcının girdiği mesajı al
        var message = document.getElementById("message").value;

        // API isteğini başlat
        $.ajax({
            type: "POST",
            url: "@Url.Action("SendMessage", "Home")",
            data: { message: message },
            success: function (response) {
                if (response.success) {
                    // Başarılı yanıt alındığında veriyi göster
                    $("#api-data").val(response.data);
                } else {
                    // Hata mesajını göster
                    alert(response.message);
                }
            },
            error: function () {
                // Hata durumunda genel bir hata mesajı göster
                alert("API isteği sırasında bir hata oluştu.");
            }
        });
    });
</script>
 *@

@* <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Health AI</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">Health AI</div>
        <div class="chat-messages" id="chatMessages">
            
        </div>
        <div class="chat-input">
            <input type="text" id="userInput" placeholder="Type a health question...">
            <br />
            <br />
            <button onclick="sendMessage()">GÖNDER</button>
            <span class="label">
                Upload File
            </span>
            <input type="file" name="upload" id="upload" class="upload-box" placeholder="Upload File">
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>
 *@